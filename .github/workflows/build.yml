# ! Build & Create Draft Release workflow
name: Build & Create Draft Release

# * Set the required permissions for the workflow
permissions:
  contents: write

# * Trigger the workflow when a tag matching 'v[0-9]*' is pushed
on:
  push:
    tags:
      - 'v[0-9]*'
  workflow_dispatch:

jobs:
  # function: Extract release version from the tag
  set-version:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.get_version.outputs.release_version }}
    steps:
      - name: Extract Release Version from Tag
        id: get_version
        run: |
          # * Get version number from the tag
          version="${GITHUB_REF#refs/tags/}"
          echo "release_version=${version}" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: set-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      RELEASE_VERSION: ${{ needs.set-version.outputs.release_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Run Build Script (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          # ! Execute Linux build script
          chmod +x electron/release-scripts/linux.sh
          electron/release-scripts/linux.sh "$RELEASE_VERSION" "$GITHUB_WORKSPACE/release_artifacts/linux/$RELEASE_VERSION"

      - name: Run Build Script (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # ! Execute macOS build script
          chmod +x electron/release-scripts/macos.sh
          electron/release-scripts/macos.sh "$RELEASE_VERSION" "$GITHUB_WORKSPACE/release_artifacts/macos/$RELEASE_VERSION"

      - name: Run Build Script (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          # ! Execute Windows build script
          .\electron\release-scripts\windows.ps1 -ReleaseVersion "$env:RELEASE_VERSION" -ReleasePath "$env:GITHUB_WORKSPACE\release_artifacts\windows\$env:RELEASE_VERSION"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: release_artifacts/**
          # note: Uploads artifacts for the current operating system

  release:
    name: Create Draft Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts
          # * Downloads all artifacts from the build job

      - name: Generate SHA256 Checksums
        run: |
          mkdir -p final_release

          cp -r release_artifacts/*-artifacts/* final_release/

          cd final_release

          find . -type f -not -name "SHASUMS256.txt" -exec sha256sum {} \; | sort > SHASUMS256.txt

          cat SHASUMS256.txt

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true
          files: final_release/**/*
          # ^ Creates a draft release with uploaded artifacts including the SHASUMS256.txt file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
